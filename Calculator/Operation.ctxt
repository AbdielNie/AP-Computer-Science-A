#BlueJ class context
comment0.target=Operation
comment0.text=\r\n\ @name\:\ Operation\r\n\ @author\:\ jimschenchen\r\n\ @date\:\ Jan.2nd\ 2018\r\n\ @description\:\ \ \ To\ change\ this\ license\ header,\ choose\ License\ Headers\ in\ Project\ Properties.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ To\ change\ this\ template\ file,\ choose\ Tools\ |\ Templates\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ and\ open\ the\ template\ in\ the\ editor.\r\n
comment1.params=str
comment1.target=java.lang.String\ operation(java.lang.String)
comment1.text=\r\n\ @name\:\ operation\r\n\ @param\:\ String\ str\r\n\ @return\:\ String\r\n\ @description\:\ \r\n
comment10.params=str\ indexOfSign
comment10.target=double\ getFrontNum(java.lang.String,\ int)
comment10.text=\r\n\ @name\:\ getFrontNum\r\n\ @param\:\ String\ str,\ int\ indexOfSign\r\n\ @return\:\ double\r\n\ @description\:\ \ to\ get\ the\ front\ and\ last\ number\ between\ the\ operation\ sign\r\n\ \ \ include\ the\ negative\ sign\ \ \ eg\:\ +-12*14\ it\ will\ get\ -12\r\n\ \ \ my\ soul\ was\ suffered\ by\ this\ 0_0\r\n
comment11.params=str\ indexOfSign
comment11.target=double\ getLastNum(java.lang.String,\ int)
comment11.text=\r\n\ @name\:\ getLastNum\r\n\ @param\:\ String\ str,\ int\ indexOfSign\r\n\ @return\:\ double\r\n\ @description\:\ \r\n
comment12.params=str\ indexOfSign
comment12.target=int\ getFrontIndex(java.lang.String,\ int)
comment12.text=\r\n\ @name\:\ getFrontIndex\r\n\ @param\:\ String\ str,\ int\ indexOfSign\r\n\ @return\:\ int\r\n\ @description\:\ return\ the\ index\ of\ operated\ number\ \ \ \ 12+78*12\ \ \ \ the\ index\ of\ sign\ is\ 5(*)\ so\ return\ front\:3\ (7)\ and\ last\:4\ \ (8)\r\n
comment13.params=str\ indexOfSign
comment13.target=int\ getLastIndex(java.lang.String,\ int)
comment13.text=\r\n\ @name\:\ getLastIndex\r\n\ @param\:\ String\ str,\ int\ indexOfSign\r\n\ @return\:\ int\r\n\ @description\:\ \r\n
comment14.params=str
comment14.target=double\ stringToDouble(java.lang.String)
comment14.text=\r\n\ @name\:\ stringToDouble\r\n\ @param\:\ String\ str\r\n\ @return\:\ double\r\n\ @description\:\ convert\ string\ to\ double\r\n
comment15.params=str
comment15.target=java.lang.String\ optimization(java.lang.String)
comment15.text=\r\n\ @name\:\ optimization\r\n\ @param\:\ String\ str\r\n\ @return\:\ String\r\n\ @description\:\ \r\n
comment16.params=str
comment16.target=java.lang.String\ eliminateEuqal(java.lang.String)
comment16.text=\r\n\ @name\:\ eliminateEuqal\r\n\ @param\:\ String\ str\r\n\ @return\:\ String\r\n\ @description\:\ \r\n
comment2.params=str
comment2.target=java.lang.String\ calculate(java.lang.String)
comment2.text=\r\n\ @name\:\ calculate\r\n\ @param\:\ String\ str\r\n\ @return\:\ String\r\n\ @description\:\ methods\ below\ is\ to\ help\ operation\ to\ operate\r\n
comment3.params=str
comment3.target=java.lang.String\ calculateOrder(java.lang.String)
comment3.text=\r\n\ @name\:\ calculateOrder\r\n\ @param\:\ String\ str\r\n\ @return\:\ String\r\n\ @description\:\ \r\n
comment4.params=str
comment4.target=boolean\ checkBracket(java.lang.String)
comment4.text=\r\n\ @name\:\ checkBracket\r\n\ @param\:\ String\ str\r\n\ @return\:\ boolean\r\n\ @description\:\ check\ whether\ the\ (\ exist\r\n
comment5.params=ori
comment5.target=java.lang.String\ extendsDoulbe(double)
comment5.text=\r\n\ @name\:\ extendsDoulbe\r\n\ @param\:\ double\ ori\r\n\ @return\:\ String\r\n\ @description\:\ to\ deal\ the\ double\ with\ long\ length\ that\ it\ with\ display\ with\ E\r\n
comment6.params=str
comment6.target=int\ getIndexOfASSign(java.lang.String)
comment6.text=\r\n\ @name\:\ getIndexOfASSign\r\n\ @param\:\ String\ str\r\n\ @return\:\ int\r\n\ @description\:\ description\:\ to\ return\ the\ index\ of\ sign\ in\ the\ String\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ it\ does\ not\ need\ to\ judge\ the\ +/-\ sign\r\n
comment7.params=str
comment7.target=int\ getIndexOfMDSign(java.lang.String)
comment7.text=\r\n\ @name\:\ getIndexOfMDSign\r\n\ @param\:\ String\ str\r\n\ @return\:\ int\r\n\ @description\:\ \r\n
comment8.params=str
comment8.target=int\ getIndexOfFuncSign(java.lang.String)
comment8.text=\r\n\ @name\:\ getIndexOfFuncSign\r\n\ @param\:\ String\ str\r\n\ @return\:\ int\r\n\ @description\:\ \r\n
comment9.params=str\ i
comment9.target=int\ checkSign(java.lang.String,\ int)
comment9.text=\r\n\ @name\:\ checkSign\r\n\ @param\:\ String\ str,\ int\ i\r\n\ @return\:\ int\r\n\ @description\:\ warn\:need\ to\ check\ is\ negative\ sign\ or\ not\r\n
numComments=17
